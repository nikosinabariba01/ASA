def knapsack(items, capacity):
    n = len(items)
    dp = [[0] * (capacity + 1) for _ in range(n + 1)]

    for i in range(1, n + 1):
        name, weight, profit = items[i - 1]
        for w in range(1, capacity + 1):
            if weight > w:
                dp[i][w] = dp[i - 1][w]
            else:
                dp[i][w] = max(dp[i - 1][w], profit + dp[i - 1][w - weight])

    selected_items = []
    w = capacity
    for i in range(n, 0, -1):
        if dp[i][w] != dp[i - 1][w]:
            name, weight, _ = items[i - 1]
            selected_items.append(name)
            w -= weight

    return selected_items, dp[n][capacity]

# Main program
N = int(input(""))
items = []
for _ in range(N):
    name, weight, profit = input("").split()
    weight = int(weight)
    profit = int(profit)
    items.append((name, weight, profit))

capacity = int(input(""))

selected_items, max_profit = knapsack(items, capacity)

print(' '.join(selected_items))
print(max_profit)
