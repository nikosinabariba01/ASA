--- PETUALANGAN REMBO ----

def knapsack(n, weights, values, capacity):
    # Membuat tabel DP dengan ukuran n+1 x capacity+1
    dp = [[0] * (capacity + 1) for _ in range(n + 1)]

    # Mengisi tabel DP berdasarkan nilai maksimum yang dapat diperoleh
    for i in range(1, n + 1):
        for j in range(1, capacity + 1):
            if weights[i - 1] <= j:
                dp[i][j] = max(values[i - 1] + dp[i - 1][j - weights[i - 1]], dp[i - 1][j])
            else:
                dp[i][j] = dp[i - 1][j]

    # Mengembalikan nilai maksimum yang dapat diperoleh
    return dp[n][capacity]


# Membaca input dari pengguna
n = int(input("Jumlah barang di pulau: "))
weights = []
values = []

for i in range(n):
    w, v = map(int, input("Berat dan nilai barang (w, v): ").split())
    weights.append(w)
    values.append(v)

capacity = int(input("Kapasitas berat ransel: "))

# Memanggil fungsi knapsack dan mencetak hasilnya
max_value = knapsack(n, weights, values, capacity)
print("Nilai total maksimum yang dapat diperoleh:", max_value)