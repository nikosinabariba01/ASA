## Challenge: Maksimum Jumlah Subarray

Diberikan sebuah array bilangan bulat, temukan subarray berurutan dengan jumlah terbesar dan kembalikan jumlah maksimum tersebut.
Buatlah sebuah fungsi `maksimumJumlahSubarray(nums)` yang menerima array bilangan bulat `nums` dan mengembalikan sebuah bilangan bulat yang mewakili jumlah maksimum dari suatu subarray.


**Input:**
- Sebuah array bilangan bulat `nums` dengan setidaknya satu elemen. (-10^6 ≤ nums[i] ≤ 10^6)
- Array dapat mengandung bilangan positif dan negatif.

**Output:**
- Sebuah bilangan bulat yang mewakili jumlah maksimum dari suatu subarray.

**Catatan:**
- Subarray adalah subset berurutan dari array asli.

Contoh Input 1:
nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4]

Contoh Output 1:
6


Contoh Input 2:
nums = [1, 2, 3, -10, 5]

Contoh Output 2:
6


### Batasan:
- Array `nums` akan memiliki setidaknya satu elemen.
- Elemen-elemen dalam `nums` adalah bilangan bulat yang berkisar dari -10^6 hingga 10^6.
- Panjang maksimum dari `nums` adalah 10^5.


 source code dalam bahasa Python 

def maksimumJumlahSubarray(nums):
    # Menginisialisasi variabel untuk menyimpan jumlah maksimum dan jumlah saat ini
    max_sum = float('-inf')
    current_sum = 0

    # Melakukan iterasi pada setiap elemen dalam array
    for num in nums:
        # Menambahkan elemen saat ini ke jumlah saat ini
        current_sum += num

        # Memperbarui jumlah maksimum jika jumlah saat ini lebih besar
        if current_sum > max_sum:
            max_sum = current_sum

        # Mengatur jumlah saat ini ke 0 jika jumlah saat ini menjadi negatif
        if current_sum < 0:
            current_sum = 0

    # Mengembalikan jumlah maksimum
    return max_sum

    


