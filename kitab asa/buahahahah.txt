def maximize_profit(fruits, prices, limit):
    # Menghitung jumlah buah yang tersedia
    num_fruits = len(fruits)

    # Menginisialisasi keuntungan maksimum dan kombinasi buah yang dipilih
    max_profit = 0
    selected_fruits = []

    # Menghitung semua kombinasi buah dengan menggunakan pendekatan pemrograman dinamis
    for i in range(1, 2**num_fruits):
        current_fruits = []
        current_profit = 0
        current_limit = limit

        # Mengkonversi indeks ke dalam bentuk biner dan mencocokkannya dengan buah yang tersedia
        for j in range(num_fruits):
            if (i >> j) & 1:
                current_fruits.append(fruits[j])
                current_profit += prices[j]
                current_limit -= 1

        # Memeriksa apakah kombinasi buah saat ini memenuhi batasan jumlah buah yang dapat dibawa
        if current_limit >= 0 and current_profit > max_profit:
            max_profit = current_profit
            selected_fruits = current_fruits

    return selected_fruits, max_profit

# Mengambil input dari pengguna
fruits = input().split()
prices = list(map(int, input().split()))
limit = int(input())

# Menghitung hasil
selected_fruits, max_profit = maximize_profit(fruits, prices, limit)

# Mencetak nama buah yang dipilih, dipisahkan oleh spasi
selected_fruits_str = ' '.join(selected_fruits)
print(selected_fruits_str)
print(max_profit)
