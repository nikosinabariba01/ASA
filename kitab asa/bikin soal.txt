def soal_trs(arr, N):
    soal = [1] * N


    # Pindai dari kiri ke kanan
    for i in range(1,N):
        if arr[i] > arr[i-1]:
            soal[i] = soal[i-1] + 1
                        
    # Pindai dari kanan ke kiri
    for j in range(N-2, 0-1, -1):
        if arr[j] > arr[j+1] and soal[j] <= soal[j+1]:
            soal[j] = soal[j+1] + 1
               
    # print soal persiswa
    # for k in range(N):
        # print(soal[k])


    # Jumlahkan total soal
    total_soal = sum(soal)
    return total_soal


# Contoh penggunaan
N = int(input())
arr = list(map(int, input().split()))
s = soal_trs(arr, N)
print(s)














































































prak asa
Terdapat N daftar absen siswa dalam suatu kelas dan guru perlu memberikan soal kepada mereka. Setiap siswa harus menerima setidaknya satu soal. Selain itu, jika seorang siswa memiliki peringkat yang lebih banyak daripada siswa sebelahnya pada daftar absen tersebut maka dia harus mendapatkan lebih banyak soal. Tentukan jumlah soal minimum yang perlu guru buat. 


constraint
N=>arr>0




input 
N adalah jumlah siswa
arr adalah peringkat siswa pada daftar absen kelas


output
s adalah jumlah minimum soal


sample0
input0
7
1 2 7 6 5 4 3


output0
18


explanation0
1 2 7 6 5 4 3 → daftar siswa
1 1 1 1 1 1 1
1 2 3 1 1 1 1
1 1 5 4 3 2 1
1 2 5 4 3 2 1 → banyak soal yang didapat tiap siswa
berdasarkan peringkat pada daftar absen 1 2 7 6 5 4 3. tiap siswa harus memiliki minimal satu soal. misalnya pada siswa ke-2 peringkatnya 2, lebih banyak dari siswa ke-1 dan siswa ke-1 sudah dapat 1 soal maka banyak soal siswa ke-2 yaitu 2 soal. Sehingga banyak soal minimum yang perlu dibuat adalah 1+2+5+4+3+2+1 = 18 soal


sample1
input1
5
5 1 2 4 3
output1
9
5 1 2 4 3 → daftar siswa
1 1 1 1 1
1 1 2 3 1
2 1 1 2 1
2 1 2 3 1 → banyak soal yang didapat tiap siswa
2+1+2+3+1=9


sample2
input2
5
5 4 3 2 1
output2
15
5 4 3 2 1
1 1 1 1 1
1 1 1 1 1 
5 4 3 2 1
5+4+3+2+1=15


sample3
input3
7
1 2 3 4 5 6 7
output3
28
7
1 2 3 4 5 6 7
1 1 1 1 1 1 1
1 2 3 4 5 6 7
1 1 1 1 1 1 1
1+2+3+4+5+6+7=28


sample4
input4
6
2 6 3 5 4 1
output4
10
explanation4
2 6 3 5 4 1
1 1 1 1 1 1
1 2 1 2 1 1
1 2 1 3 2 1
1+2+1+3+2+1=10


sample5
input5
10
1 3 4 10 8 5 6 2 7 9
output5
21
1 3 4 10 8 5 6 2 7 9
1 2 3  4  1 1 2 1 2 3
1 1 4  3  2 1 2 1 1 1
1 2 4  4  2 1 2 1 2 3
1+2+4+4+2+1+2+1+2+3=21


sample6
input6
4
3 4 1 2
output6
6
3 4 1 2
1 1 1 1
1 2 1 2
1 2 1 1
1 2 1 2
1+2+1+2=6