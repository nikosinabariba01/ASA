def knapsack_problem(N, C, weights, values):
    dp = [[0 for _ in range(C + 1)] for _ in range(N + 1)]
    
    for i in range(1, N + 1):
        for j in range(1, C + 1):
            if weights[i - 1] <= j:
                dp[i][j] = max(values[i - 1] + dp[i - 1][j - weights[i - 1]], dp[i - 1][j])
            else:
                dp[i][j] = dp[i - 1][j]
    
    return dp[N][C]

# Membaca input jumlah barang dan kapasitas tas
N, C = map(int, input().split())

# Membaca bobot dan nilai setiap barang
weights = []
values = []
for _ in range(N):
    w, v = map(int, input().split())
    weights.append(w)
    values.append(v)

# Memanggil fungsi untuk menyelesaikan masalah
result = knapsack_problem(N, C, weights, values)

# Menampilkan output
print(result)